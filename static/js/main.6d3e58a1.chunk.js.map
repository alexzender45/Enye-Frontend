{"version":3,"sources":["components/profiles/index.js","components/router/index.js","App.js","reportWebVitals.js","index.js"],"names":["AnyReactComponent","text","MediaCard","zoomLevel","location","useState","profile","setProfile","show","setShow","activePage","setCurrentPage","useEffect","fetch","then","result","json","response","records","profiles","indexOfProfile","indexOfFirstProfile","currentProfile","filter","user","Gender","CreditCardType","slice","style","textAlign","color","marginTop","display","margin","width","placeholder","value","onChange","event","target","className","itemsCountPerPage","totalItemsCount","length","pageRangeDisplayed","pageNumber","console","log","Container","responsive","Row","Col","md","map","Card","alignSelf","marginBottom","Text","LastLogin","Title","fontSize","FirstName","Body","LastName","CreditCardNumber","Email","DomainName","PhoneNumber","UserName","URL","PaymentMethod","height","bootstrapURLKeys","key","defaultCenter","lat","Latitude","lng","Longitude","defaultZoom","MacAddress","flexWrap","AllRoute","basename","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d3e58a1.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport GoogleMapReact from 'google-map-react'\r\nimport Pagination from \"react-js-pagination\";\r\nimport './map.css'\r\nimport './style.css'\r\nimport '../../App.css'\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nexport default function MediaCard( {zoomLevel, location}) {\r\nconst [profile, setProfile] = useState([])\r\nconst [show, setShow] = useState([''])\r\nconst profilePerPage = 20;\r\nconst [ activePage, setCurrentPage ] = useState( 1 );\r\n\r\nuseEffect(() => {\r\n        fetch('https://api.enye.tech/v1/challenge/records')\r\n        .then(result => result.json())\r\n        .then(response => {\r\n            setProfile(response.records.profiles)\r\n        })\r\n    },[])\r\n    let friends = profile.filter( function (user) {\r\n      return user.Gender === show || user.CreditCardType === show\r\n    });\r\n    const handleInputChange = event => {\r\n      setShow(event.target.value);\r\n    }\r\n    const indexOfProfile  = activePage * profilePerPage;\r\n   const indexOfFirstProfile = indexOfProfile - profilePerPage;\r\n   const currentProfile     = friends.slice( indexOfFirstProfile, indexOfProfile );\r\n\r\n   const handlePageChange = ( pageNumber ) => {\r\n    console.log( `active page is ${ pageNumber }` );\r\n    setCurrentPage( pageNumber )\r\n };\r\n  return (\r\n    <div>\r\n      <div><h1 style={{textAlign:'center', color:'#218838'}}>Welcome to Enye Frontend Challenge</h1>\r\n      <h3 style={{textAlign:'center', color:'#218838'}}>You Can Get User Profiles by <b>Gender</b> Or <b>CreditCardType</b></h3>\r\n      </div>\r\n      <div style={{ marginTop:30}}>\r\n        <h4 style={{ display: 'flex', margin: '0 auto', width: 250, color:'#218838'}}>Search</h4>\r\n        <form style={{ display: 'flex', margin: '0 auto', width: 250}}>\r\n          <input\r\n            placeholder=\"Search for...\"\r\n            value={show}\r\n            onChange={handleInputChange}\r\n          />\r\n        </form>\r\n        </div>\r\n        <div className=\"pagination\">\r\n            <Pagination\r\n               activePage={ activePage }\r\n               itemsCountPerPage={ 20 }\r\n               totalItemsCount={ profile.length }\r\n               pageRangeDisplayed={ 6 }\r\n               onChange={ handlePageChange }\r\n            />\r\n         </div>\r\n      <Container style={responsive}>\r\n         <Row>\r\n      <Col md={12}>\r\n      {currentProfile.map((user) =>\r\n    <Card style={{ width: 'auto', alignSelf:\"center\", marginBottom:100}} key={user.MacAddress}>\r\n       <Card.Text>\r\n      <h4>LastLogin <b>{user.LastLogin}</b></h4>\r\n    </Card.Text>\r\n      <Card.Title style={{fontSize:40}}>Welcom to your Profile <b>{user.FirstName}</b> </Card.Title>\r\n      <Card.Body>\r\n    <Card.Title>{user.FirstName} {user.LastName}</Card.Title>\r\n    <Card.Text>\r\n      Card Number: <b>{user.CreditCardNumber}</b>\r\n    </Card.Text>\r\n    <Card.Text>\r\n      Card Type: <b>{user.CreditCardType}</b>\r\n    </Card.Text>\r\n    <Card.Text>\r\n    You can send me email: <b>{user.Email}</b>\r\n    </Card.Text>\r\n    <Card.Text>\r\n    Gender: <b>{user.Gender}</b>\r\n    </Card.Text>\r\n    <Card.Text>\r\n    My Domain Name: <b>{user.DomainName}</b>\r\n    </Card.Text>\r\n    <Card.Text>\r\n    Phone Number: <b>{user.PhoneNumber}</b>\r\n    </Card.Text>\r\n    <Card.Text>\r\n      My Username: <b> {user.UserName}</b>\r\n    </Card.Text>\r\n    <Card.Text>\r\n      My Link: <b>{user.URL}</b>\r\n    </Card.Text>\r\n    <Card.Text>\r\n      Payment Method <b>{user.PaymentMethod}</b>\r\n    </Card.Text>\r\n    <Card.Text><b>My Location</b></Card.Text>\r\n  </Card.Body>\r\n  <div style={{ height: '40vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyDStHawCdZuOxWyFhfpk4ECS1shiYHII9E' }}\r\n          defaultCenter={{lat:user.Latitude, lng:user.Longitude}}\r\n          defaultZoom={11}\r\n        >\r\n          <AnyReactComponent\r\n            lat={user.Latitude}\r\n            lng={user.Longitude}\r\n            text=\"My Marker\"\r\n          />\r\n        </GoogleMapReact>\r\n      </div>\r\n    </Card>)}\r\n  \r\n</Col>\r\n</Row>\r\n</Container>\r\n</div>\r\n  );\r\n}\r\n\r\nconst responsive = {\r\n        marginTop: 70,\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n}","import React from 'react';\r\nimport { Route, HashRouter } from 'react-router-dom'\r\nimport MediaCard from '../profiles'\r\n\r\nconst AllRoute = () => { \r\n\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n            <Route exact path=\"/\" component={MediaCard} />\r\n            </HashRouter>\r\n  );\r\n}\r\n\r\nexport default AllRoute;","import { Fragment } from 'react'\nimport AllRoute from './components/router'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Fragment>\n      <AllRoute />\n      </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}